/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  TrackingInformation as PrismaTrackingInformation,
} from "@prisma/client";

export class TrackingInformationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.TrackingInformationCountArgs, "select">
  ): Promise<number> {
    return this.prisma.trackingInformation.count(args);
  }

  async trackingInformations(
    args: Prisma.TrackingInformationFindManyArgs
  ): Promise<PrismaTrackingInformation[]> {
    return this.prisma.trackingInformation.findMany(args);
  }
  async trackingInformation(
    args: Prisma.TrackingInformationFindUniqueArgs
  ): Promise<PrismaTrackingInformation | null> {
    return this.prisma.trackingInformation.findUnique(args);
  }
  async createTrackingInformation(
    args: Prisma.TrackingInformationCreateArgs
  ): Promise<PrismaTrackingInformation> {
    return this.prisma.trackingInformation.create(args);
  }
  async updateTrackingInformation(
    args: Prisma.TrackingInformationUpdateArgs
  ): Promise<PrismaTrackingInformation> {
    return this.prisma.trackingInformation.update(args);
  }
  async deleteTrackingInformation(
    args: Prisma.TrackingInformationDeleteArgs
  ): Promise<PrismaTrackingInformation> {
    return this.prisma.trackingInformation.delete(args);
  }
}
