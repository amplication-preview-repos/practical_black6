/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Consignment as PrismaConsignment } from "@prisma/client";

export class ConsignmentServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ConsignmentCountArgs, "select">
  ): Promise<number> {
    return this.prisma.consignment.count(args);
  }

  async consignments(
    args: Prisma.ConsignmentFindManyArgs
  ): Promise<PrismaConsignment[]> {
    return this.prisma.consignment.findMany(args);
  }
  async consignment(
    args: Prisma.ConsignmentFindUniqueArgs
  ): Promise<PrismaConsignment | null> {
    return this.prisma.consignment.findUnique(args);
  }
  async createConsignment(
    args: Prisma.ConsignmentCreateArgs
  ): Promise<PrismaConsignment> {
    return this.prisma.consignment.create(args);
  }
  async updateConsignment(
    args: Prisma.ConsignmentUpdateArgs
  ): Promise<PrismaConsignment> {
    return this.prisma.consignment.update(args);
  }
  async deleteConsignment(
    args: Prisma.ConsignmentDeleteArgs
  ): Promise<PrismaConsignment> {
    return this.prisma.consignment.delete(args);
  }
}
